# This is a multiarch Dockerfile.  See https://docs.docker.com/desktop/multi-arch/
#
# To set up the first time:
#     docker buildx create --name multiarch --use
#
# To build:
#     docker buildx build --platform linux/amd64,linux/arm64 \
#       -f ./Dockerfile-postgresql -t zulip/zulip-postgresql:17 --push .

# Currently the PostgreSQL images do not support automatic upgrading of
# the on-disk data in volumes. So the base image cannot currently be upgraded
# without users needing a manual pgdump and restore.

# https://hub.docker.com/r/groonga/pgroonga/tags
ARG PGROONGA_VERSION=latest
ARG POSTGRESQL_VERSION=17
FROM groonga/pgroonga:${PGROONGA_VERSION}-alpine-${POSTGRESQL_VERSION}-slim

# Vendor dictionaries from LibreOffice (pin LO_DICTS_COMMIT to a specific ref/commit for reproducible builds)
ARG LO_DICTS_COMMIT=refs/heads/master
RUN set -eux; \
    apk add --no-cache curl ca-certificates; \
    mkdir -p /usr/share/hunspell /usr/local/share/postgresql/tsearch_data; \
    curl -fsSL -o /usr/share/hunspell/en_US.aff "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/en/en_US.aff"; \
    curl -fsSL -o /usr/share/hunspell/en_US.dic "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/en/en_US.dic"; \
    curl -fsSL -o /usr/share/hunspell/de_DE_frami.aff "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/de/de_DE_frami.aff"; \
    curl -fsSL -o /usr/share/hunspell/de_DE_frami.dic "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/de/de_DE_frami.dic"; \
    curl -fsSL -o /usr/share/hunspell/bg_BG.aff "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/bg_BG/bg_BG.aff"; \
    curl -fsSL -o /usr/share/hunspell/bg_BG.dic "https://raw.githubusercontent.com/LibreOffice/dictionaries/${LO_DICTS_COMMIT}/bg_BG/bg_BG.dic"; \
    ln -sf /usr/share/hunspell/en_US.dic /usr/local/share/postgresql/tsearch_data/en_us.dict; \
    ln -sf /usr/share/hunspell/en_US.aff /usr/local/share/postgresql/tsearch_data/en_us.affix; \
    ln -sf /usr/share/hunspell/de_DE_frami.dic /usr/local/share/postgresql/tsearch_data/de_de.dict; \
    ln -sf /usr/share/hunspell/de_DE_frami.aff /usr/local/share/postgresql/tsearch_data/de_de.affix; \
    ln -sf /usr/share/hunspell/bg_BG.dic /usr/local/share/postgresql/tsearch_data/bg_bg.dict; \
    ln -sf /usr/share/hunspell/bg_BG.aff /usr/local/share/postgresql/tsearch_data/bg_bg.affix

COPY puppet/zulip/files/postgresql/zulip_english.stop /usr/local/share/postgresql/tsearch_data/zulip_english.stop
COPY puppet/zulip/files/postgresql/zulip_german.stop /usr/local/share/postgresql/tsearch_data/german_english.stop
COPY puppet/zulip/files/postgresql/zulip_bulgarian.stop /usr/local/share/postgresql/tsearch_data/zulip_bulgarian.stop
COPY scripts/setup/create-db.sql /docker-entrypoint-initdb.d/zulip-create-db.sql
COPY scripts/setup/create-pgroonga.sql /docker-entrypoint-initdb.d/zulip-create-pgroonga.sql
